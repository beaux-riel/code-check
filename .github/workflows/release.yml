name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8.15.6'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test

      - name: Build packages
        run: pnpm run build

      - name: Package VS Code extension
        run: |
          cd packages/vscode-extension
          pnpm run package
          ls -la *.vsix

      - name: Publish to VS Code Marketplace
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd packages/vscode-extension
          npx vsce publish --packagePath *.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to OpenVSX Registry
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd packages/vscode-extension
          npx ovsx publish *.vsix
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}

      - name: Publish npm packages
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Publish CLI package
          cd packages/cli
          npm publish --access public
          
          # Publish shared package
          cd ../shared
          npm publish --access public
          
          # Publish core-engine package
          cd ../core-engine
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            packages/vscode-extension/*.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload VS Code extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: vscode-extension
          path: packages/vscode-extension/*.vsix
          retention-days: 30

  desktop-release:
    name: Desktop App Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build desktop app
        run: pnpm run desktop:build

      - name: Package desktop app
        run: pnpm run desktop:dist

      - name: Upload desktop artifacts
        uses: actions/upload-artifact@v3
        with:
          name: desktop-app-${{ matrix.os }}
          path: |
            packages/desktop-app/dist/*.exe
            packages/desktop-app/dist/*.dmg
            packages/desktop-app/dist/*.AppImage
            packages/desktop-app/dist/*.deb
            packages/desktop-app/dist/*.rpm
          retention-days: 30
